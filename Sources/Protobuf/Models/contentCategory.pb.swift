// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: Models/contentCategory.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum ContentCategory: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case other // = 0
  case housing // = 1
  case dining // = 2
  case sportsAndRecreation // = 3
  case academics // = 4
  case healthAndSafety // = 5
  case career // = 6
  case campusEvents // = 7
  case campusClubs // = 8
  case UNRECOGNIZED(Int)

  public init() {
    self = .other
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .other
    case 1: self = .housing
    case 2: self = .dining
    case 3: self = .sportsAndRecreation
    case 4: self = .academics
    case 5: self = .healthAndSafety
    case 6: self = .career
    case 7: self = .campusEvents
    case 8: self = .campusClubs
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .other: return 0
    case .housing: return 1
    case .dining: return 2
    case .sportsAndRecreation: return 3
    case .academics: return 4
    case .healthAndSafety: return 5
    case .career: return 6
    case .campusEvents: return 7
    case .campusClubs: return 8
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension ContentCategory: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [ContentCategory] = [
    .other,
    .housing,
    .dining,
    .sportsAndRecreation,
    .academics,
    .healthAndSafety,
    .career,
    .campusEvents,
    .campusClubs,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension ContentCategory: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension ContentCategory: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "other"),
    1: .same(proto: "housing"),
    2: .same(proto: "dining"),
    3: .same(proto: "sportsAndRecreation"),
    4: .same(proto: "academics"),
    5: .same(proto: "healthAndSafety"),
    6: .same(proto: "career"),
    7: .same(proto: "campusEvents"),
    8: .same(proto: "campusClubs"),
  ]
}
